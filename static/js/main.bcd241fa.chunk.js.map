{"version":3,"sources":["components/about.js","components/cards.js","components/links.js","app.js","serviceWorker.js","index.js","tales.js"],"names":["MainDiv","styled","div","About","TalesDiv","HeaderDiv","DetailDiv","tagColors","JavaScript","React","Cards","useState","tales","map","tale","i","collapsed","setCollapsed","key","title","className","onClick","ogCollapsed","collapse","date","style","backgroundColor","type","content","value","test","Links","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"8YAGA,IAAMA,EAAUC,IAAOC,IAAV,KAOE,SAASC,IACpB,OACI,kBAACH,EAAD,KACI,iJ,u2CCPZ,IAAMA,EAAUC,IAAOC,IAAV,KAUPE,EAAWH,IAAOC,IAAV,KASRG,EAAYJ,IAAOC,IAAV,KAuBTI,EAAYL,IAAOC,IAAV,KAgBTK,EAAY,CAAEC,WAAY,UAAWC,MAAO,WAEnC,SAASC,IAAS,IAAD,EACMD,IAAME,SAASC,QAAMC,KAAI,SAACC,EAAMC,GAAP,OAAmB,IAANA,MAD5C,mBACrBC,EADqB,KACVC,EADU,KAS5B,OACI,kBAAC,EAAD,KACKL,QAAMC,KAAI,SAACC,EAAMC,GAAP,OACP,kBAACX,EAAD,CAAUc,IAAKH,GACX,kBAACV,EAAD,KACI,4BAAKS,EAAKK,OACV,kBAAC,IAAD,CAAmBC,UAAS,uBAAmBJ,EAAUD,GAAc,GAAT,QAAeM,QAAS,kBAZzF,SAACN,EAAGO,GACjB,IAAIN,EAAS,YAAOM,GACpBN,EAAUD,IAAMC,EAAUD,GAC1BE,EAAaD,GAS+FO,CAASR,EAAGC,OAE5G,kBAACV,EAAD,KACI,yBAAKc,UAAU,YAAYN,EAAKU,MAChC,yBAAKJ,UAAU,WAAWK,MAAO,CAAEC,gBAAiBnB,EAAUO,EAAKa,QAAUb,EAAKa,OAEtF,2BAAIb,EAAKc,QAAQ,GAAGC,OACpB,8BACMb,EAAUD,IACRD,EAAKc,QAAQf,KAAI,WAAkBE,GAAO,IAAtBY,EAAqB,EAArBA,KAAME,EAAe,EAAfA,MACtB,MAAI,QAAQC,KAAKH,GAAc,uBAAGT,IAAKH,GAAIc,GAClC,QAAQC,KAAKH,GAAc,0BAAMT,IAAKH,GAAIc,GACvC,c,0JC1F5C,IAAM7B,EAAUC,IAAOC,IAAV,KAOE,SAAS6B,IACpB,OACI,kBAAC,EAAD,KACI,oCACA,kDACA,wCACA,sC,gJCTZ,IAAM/B,EAAUC,IAAOC,IAAV,KAME,SAAS8B,IACtB,OACE,kBAAC,EAAD,KACE,kBAAC7B,EAAD,MACA,kBAACO,EAAD,MACA,kBAACqB,EAAD,OCNcE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACR,EAAD,OAEFS,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,gBEzI5BC,EAAOC,QAAU,CACb1C,MAAO,CACH,CACIe,KAAM,aACNH,KAAM,WACNL,MAAO,qCACPS,QAAS,CACL,CACID,KAAM,UACNE,MAAM,oGAEV,CACIF,KAAM,OACNE,MAAM,ieAKV,CACIF,KAAM,OACNE,MAAM,+CAEV,CACIF,KAAM,OACNE,MAAM,uMAGV,CACIF,KAAM,OACNE,MAAM,0CAEV,CACIF,KAAM,OACNE,MAAM,qFAIlB,CACIF,KAAM,aACNH,KAAM,WACNL,MAAO,wCACPS,QAAS,CACL,CACID,KAAM,UACNE,MAAM,gKAGV,CACIF,KAAM,OACNE,MAAM,yYAKV,CACIF,KAAM,OACNE,MAAM,+CAEV,CACIF,KAAM,OACNE,MAAM,mCAEV,CACIF,KAAM,OACNE,MAAM,2EAEV,CACIF,KAAM,OACNE,MAAM,kTAIV,CACIF,KAAM,OACNE,MAAM,0DAEV,CACIF,KAAM,OACNE,MAAM,gD","file":"static/js/main.bcd241fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MainDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 20%;\r\n    padding: 50px 10px;\r\n`;\r\n\r\nexport default function About() {\r\n    return (\r\n        <MainDiv>\r\n            <p>\r\n                Full Stack Engineer bla bla bla. With a bla bla bla. Lorem ipsum, foo bar baz. loves to bla bla bla.... starwars!\r\n            </p>\r\n        </MainDiv>\r\n    );\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { tales } from '../tales';\r\n\r\nimport { IoIosArrowForward } from 'react-icons/io';\r\n\r\nconst MainDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    width: 60%;\r\n    height: calc(100vh - 20px);\r\n    overflow: auto;\r\n    /* background-color: pink; */\r\n`;\r\n\r\nconst TalesDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 5px 10px;\r\n    margin: 5px 0px;\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst HeaderDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    h1 {\r\n        margin: 0px;\r\n    }\r\n    .expand-arrow {\r\n        height: 2em;\r\n        width: 2em;\r\n        margin-right: 20px;\r\n        color: #209cee;\r\n        -moz-transition: all 0.4s ease;\r\n        -webkit-transition: all 0.4s ease;\r\n        transition: all 0.4s ease;\r\n    }\r\n    .down{\r\n        -moz-transform:rotate(90deg);\r\n        -webkit-transform:rotate(90deg);\r\n        transform:rotate(90deg);\r\n    }\r\n`;\r\n\r\nconst DetailDiv = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    .tag {\r\n        margin: 5px;\r\n        padding: 5px;\r\n        border-radius: 5px;\r\n    }\r\n    .date {\r\n        background-color: grey;\r\n        color: #ffffff;\r\n    }\r\n    .type {\r\n    }\r\n`;\r\n\r\nconst tagColors = { JavaScript: '#f0db4f', React: '#5fd9fb' };\r\n\r\nexport default function Cards() {\r\n    const [collapsed, setCollapsed] = React.useState(tales.map((tale, i) => i === 0 ? false : true));\r\n\r\n    const collapse = (i, ogCollapsed) => {\r\n        let collapsed = [...ogCollapsed];\r\n        collapsed[i] = !collapsed[i];\r\n        setCollapsed(collapsed);\r\n    };\r\n\r\n    return (\r\n        <MainDiv>\r\n            {tales.map((tale, i) => (\r\n                <TalesDiv key={i}>\r\n                    <HeaderDiv>\r\n                        <h1>{tale.title}</h1>\r\n                        <IoIosArrowForward className={`expand-arrow ${!collapsed[i] ? 'down' : ''}`} onClick={() => collapse(i, collapsed)} />\r\n                    </HeaderDiv>\r\n                    <DetailDiv>\r\n                        <div className=\"tag date\">{tale.date}</div>\r\n                        <div className=\"tag type\" style={{ backgroundColor: tagColors[tale.type] }}>{tale.type}</div>\r\n                    </DetailDiv>\r\n                    <p>{tale.content[0].value}</p>\r\n                    <div>\r\n                        {!collapsed[i] &&\r\n                            tale.content.map(({ type, value }, i) => {\r\n                                if (/^text/.test(type)) return <p key={i}>{value}</p>;\r\n                                else if (/^code/.test(type)) return <code key={i}>{value}</code>;\r\n                                else return null;\r\n                            })\r\n                        }\r\n                    </div>\r\n                </TalesDiv>\r\n            ))}\r\n        </MainDiv>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MainDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 20%;\r\n  padding: 50px 10px;\r\n`;\r\n\r\nexport default function Links() {\r\n    return (\r\n        <MainDiv>\r\n            <p>Links</p>\r\n            <p>Links will be here!</p>\r\n            <p>Very soon</p>\r\n            <p>ish...</p>\r\n        </MainDiv>\r\n    );\r\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport About from './components/about';\nimport Cards from './components/cards';\nimport Links from './components/links';\n\nconst MainDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 0px 10px 0px 10px;\n`;\n\nexport default function App() {\n  return (\n    <MainDiv>\n      <About />\n      <Cards />\n      <Links />\n    </MainDiv>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n    tales: [\r\n        {\r\n            type: 'JavaScript',\r\n            date: '6/8/2020',\r\n            title: 'I have been using react all wrong!',\r\n            content: [\r\n                {\r\n                    type: 'pretext',\r\n                    value: `I generally make it a habit to re-evaluatue myself, both as an individual and as a programmer...`,\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    value: `This helps me improve the overall quality of code that i conjure using my Ducky(shoutout! amazing keyboards!) magic wand.\r\n                            Ever so often it happens that you stumble upon a piece of code that makes you go 'wow, why did i not do it this way'.\r\n                            A similiar moment happened when i was going through the source of a React theme, the way i have been hiding things in the DOM \r\n                            is by using this syntax`,\r\n                },\r\n                {\r\n                    type: 'code',\r\n                    value: `{hidden ? null : <p> You can't see me </p>}`,\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    value: `To be honest i have been bothered by this a little bit, it just seems like one additional unnecessay thing, that 'null' servers no purpose.\r\n                            So when i saw this synatax`,\r\n                },\r\n                {\r\n                    type: 'code',\r\n                    value: `{!hidden && <p> You can't see me </p>}`,\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    value: `I was blown away(just a tiny bit). So from now on, this is going to be my goto.`,\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            type: 'JavaScript',\r\n            date: '5/8/2020',\r\n            title: 'Neat way of using Reduce with Objects',\r\n            content: [\r\n                {\r\n                    type: 'pretext',\r\n                    value: `Recently i found myself in need of adding up some values in an array, \r\n                    the problem was that these values were present inside objects...`,\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    value: `JavaScript gives us a selection of methods to mangle and transform arrays it's just a matter of choosing the right one. \r\n                    Reduce seemed like the right nut for this bolt. \r\n                    It's a neat method, it takes in an accumulator and current value as basic values (other things can be passed as well, see here...).\r\n                    At first i wrote up this`,\r\n                },\r\n                {\r\n                    type: 'code',\r\n                    value: `let arr = [{ x: 2 }, { x: 22 }, { x: 42 }];`,\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    value: `example array to verify outputs`,\r\n                },\r\n                {\r\n                    type: 'code',\r\n                    value: `arr.reduce((acc, obj) => ({ x: (acc.x + obj.x) })); //Output: { x: 66 }`,\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    value: `The syntax is minimal(which i do prefer),\r\n                    it returns an object with key x that holds the sum, Job done! or not that seems one more step and we are all about getting it done\r\n                    with the bare minimum, that is where initial value paramter for Reduce method comes in,`,\r\n                },\r\n                {\r\n                    type: 'code',\r\n                    value: `arr.reduce((acc, obj) => acc + obj.x, 0); //Output: 66`,\r\n                },\r\n                {\r\n                    type: 'text',\r\n                    value: `There we go, just a nice clean number.`,\r\n                },\r\n            ]\r\n        },\r\n    ],\r\n\r\n}"],"sourceRoot":""}